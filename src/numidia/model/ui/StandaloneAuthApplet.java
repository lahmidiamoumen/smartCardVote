/*
 * StandaloneAuthApplet.java
 *
 * Created on 17/Fev/2011, 18:58:09
 */
package numidia.model.ui;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;

/**
 *
 * @author bnazare
 */
public class StandaloneAuthApplet extends javax.swing.JApplet {
    
    /** Initializes the applet StandaloneAuthApplet */
    public void init() {
        try {
            UIManager.setLookAndFeel(new CCCustomLookAndFeel());
        } catch (Exception ex) {
            Logger.getLogger(StandaloneAuthApplet.class.getName()).log(Level.WARNING, null, ex);
        }
        
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    initComponents();
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        
        standaloneAuthPanel1.setHeadless(Boolean.parseBoolean(getParameter("auth.headless")));
        standaloneAuthPanel1.loadRequestedData(getParameter("auth.data.requested"));
        standaloneAuthPanel1.loadSubmitPath(getDocumentBase(), getParameter("auth.submit.path"));
        
        standaloneAuthPanel1.init();
    }
    
    @Override
    public void stop() {
        standaloneAuthPanel1.stop();
    }
    
    @Override
    public String[][] getParameterInfo() {
        String pinfo[][] = {
            {"auth.submit.path", "url", "path to the page to receive the final submit"} ,
            {"auth.data.requested", "string", "a string describing requested data values"} ,
            {"auth.headless", "boolean", "operate in headless mode?"}
        };
        
        return pinfo;
    }
    
    public void startAuthentication() {
        standaloneAuthPanel1.startAuthentication();
    }
    
    public void authorize(String authorizedAttrs) {
        standaloneAuthPanel1.authorize(authorizedAttrs);
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        standaloneAuthPanel1 = new StandaloneAuthPanel();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(standaloneAuthPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(standaloneAuthPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private StandaloneAuthPanel standaloneAuthPanel1;
    // End of variables declaration//GEN-END:variables
}
